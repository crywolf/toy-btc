x-node-common-config: &node-common
  image: btc_node_grpc
  build:
    context: .
    dockerfile: node_grpc.Dockerfile
  networks:
    - btc_grpc
  restart: on-failure
###############################################################

services:

###############################################################
# NODES

  node_1:
    <<: *node-common
    command: --host node_1 --port 50000
    ports:
      - 50001:50000
    volumes:
      - node1:/data

  node_2:
    <<: *node-common
    command: --host node_2 --port 50000 node_1:50000
    ports:
      - 50002:50000
    volumes:
      - node2:/data
    depends_on:
      node_1:
        condition: service_started

  node_3:
    <<: *node-common
    command: --host node_3 --port 50000 node_2:50000
    ports:
      - 50003:50000
    volumes:
      - node3:/data
    depends_on:
      node_2:
        condition: service_started

  node_4:
    <<: *node-common
    command: --host node_4 --port 50000 node_2:50000
    ports:
      - 50004:50000
    volumes:
      - node4:/data
    depends_on:
      node_3:
        condition: service_started

  node_5:
    <<: *node-common
    command: --host node_5 --port 50000 node_4:50000 node_2:50000
    ports:
      - 50005:50000
    volumes:
      - node5:/data
    depends_on:
      node_4:
        condition: service_started

###############################################################
# MINER

  miner:
    image: btc_miner_grpc
    command: -a node_3:50000 -p /data/alice.pub.pem
    volumes:
      - .:/data:ro
    build:
      context: .
      dockerfile: miner_grpc.Dockerfile
    networks:
      - btc_grpc
    restart: on-failure
    depends_on:
      node_5:
        condition: service_started

###############################################################

volumes:
  node1:
  node2:
  node3:
  node4:
  node5:

networks:
  btc_grpc:

###############################################################
