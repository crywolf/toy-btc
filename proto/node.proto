syntax = "proto3";

package node;

service NodeApi {
    // Ask a node to report all the other nodes it knows about
    rpc DiscoverNodes (Empty) returns (NodeList);

    // Ask a node what is the highest block it knows about in comparison to the local blockchain
    rpc AskDifference (DifferenceRequest) returns (DifferenceResponse);

    // Ask a node to send stream of blocks starting from the specified height
    rpc FetchBlocks(FetchBlockIntervalRequest) returns (stream Block);

    // Ask a node to send stream of newly received items (blocks and transactions)
    rpc SubscribeForNewItems(SubscriptionRequest) returns (stream NewItemResponse);
}

message Empty {}

message NodeList {
    repeated string nodes = 1;
}

message DifferenceRequest {
    // Block height
    uint64 height = 1;
}

message DifferenceResponse {
    int64 n_blocks = 1;
}

message FetchBlockIntervalRequest {
    // Block height of the first requested block
    uint64 start = 1;
    // Number of blocks to send
    uint64 n_blocks = 2;
}

message Block {
    bytes cbor = 1;
}

message SubscriptionRequest {
    string addr = 1;
}

enum ItemType {
  ITEM_TYPE_UNSPECIFIED = 0;
  ITEM_TYPE_BLOCK = 1;
  ITEM_TYPE_TRANSACTION = 2;
}

// Block or transaction
message Item {
    bytes cbor = 1;
}

message NewItemResponse {
    ItemType item_type = 1;
    Item item = 2;
}
